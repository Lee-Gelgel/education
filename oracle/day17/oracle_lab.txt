select * from Employees;
1. 급여가 15000 이상인 직원들의 이름, 급여, 부서id를 조회하시오.

select first_name "성", last_name "이름", salary "급여", department_id "부서id" 
from employees 
where salary >= 15000;


2. 직원 중에서 연봉이 170000 이상인 직원들의 이름, 연봉을 조회하시오.
연봉은 급여(salary)에 12를 곱한 값입니다.
select first_name "성", last_name "이름", salary*12 as "연봉"
from employees
where salary*12 >= 170000
order by salary*12 asc, first_name desc;

3. 직원 중에서 부서id가 없는 직원의 이름과 급여를 조회하시오.
select first_name "성", last_name "이름", salary "급여"
from employees
where department_id is null

4. 2005년 이전에 입사한 직원의 이름, 급여, 입사일을 조회하시오.
select first_name "성", last_name "이름", salary "급여", hire_date "입사일"
from employees
where to_char(hire_date, 'yyyy') < '2005'


----------------------------------------------------------------------------------

1. 이름이 'adam' 인 직원의 급여와 입사일을 조회하시오.
select first_name, salary, hire_date
from employees
where first_name = initcap('adam')

2. 나라 명이 'united states of america' 인 나라의 국가 코드를 조회하시오.
SELECT COUNTRY_ID FROM COUNTRIES
WHERE COUNTRY_NAME = REPLACE(initcap('United States of America'),'Of','of')



3. 'Adam의 입사일은 95/11/02 이고, 급여는 7000 입니다.' 이런 식으로 직원
정보를 조회하시오.
select first_name||'의 입사일은 '|| hire_date||'이고, 급여는 ' ||salary||' 입니다.' "직원정보 조회"
from employees




4. 이름이 5글자 이하인 직원들의 이름, 급여, 입사일을 조회하시오.
select first_name, salary, hire_date
from employees
where LENGTH(first_name) <= 5



5. 2005년도에 입사한 직원의 이름, 입사일을 조회하시오.
select first_name, hire_date
from employees
where to_char(hire_date,'yyyy') = 2005



6. 10년 이상 장기 근속한 직원들의 이름, 입사일, 급여, 근무년차를 조회하시오.
select first_name, hire_date, salary, to_char(sysdate,'yyyy')-to_char(hire_date,'yyyy') 근무년차
from employees
where to_char(sysdate,'yyyy')-to_char(hire_date,'yyyy') >= 10

----------------------------------------------------------------------------------------

========================================
		JOIN
========================================
select * from employees
select * from jobs
select * from departments
select * from locations
select * from countries

1.직원들의 이름과 직급명(job_title)을 조회하시오.
select e.first_name as "이름", j.job_title as "직급명"
from employees e, jobs j
where e.job_id = j.job_id

2.부서이름과 부서가 속한 도시명(city)을 조회하시오.
select d.department_name, l.city
from departments d, locations l
where d.location_id = l.location_id

3. 직원의 이름과 근무국가명을 조회하시오. (employees, departments, locations,countries)
 select e.first_name, c.country_name
 from employees e, departments d, locations l, countries c
 where e.department_id = d.department_id
 		and d.location_id = l.location_id
 		and l.country_id = c.country_id


4. 직책(job_title)이 'manager' 인 사람의 이름, 직책, 부서명을 조회하시오.
select e.first_name, j.job_title, d.department_name
from employees e , jobs j, departments d
where e.job_id = j.job_id
		and e.department_id = d.department_id
		and j.job_title like initcap('%manager')

--to_char(e.hire_date,'dd')
5. 직원들의 이름, 입사일, 부서명을 조회하시오.
select e.first_name 이름,to_char(e.hire_date,'yyyy-mm-dd') 입사일, d.department_name 부서명
from employees e, departments d
where e.department_id = d.department_id


6. 직원들의 이름, 입사일, 부서명을 조회하시오.
단, 부서가 없는 직원이 있다면 그 직원정보도 출력결과에 포함시킨다.
select e.first_name,to_char(e.hire_date,'yyyy-mm-dd'), d.department_name
from employees e, departments d
where e.department_id = d.department_id(+)


7. 직원의 이름과 직책(job_title)을 출력하시오.
단, 사용되지 않는 직책이 있다면 그 직책정보도 출력결과에 포함시키시오.
select e.first_name, j.job_title
from employees e , jobs j 
where e.job_id(+) = j.job_id


select e.first_name, j.job_title
from employees e right join jobs j on(e.job_id = j.job_id)